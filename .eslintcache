[{"F:\\smart-house\\src\\index.js":"1","F:\\smart-house\\src\\App.js":"2","F:\\smart-house\\src\\redux\\store.js":"3","F:\\smart-house\\src\\components\\Header\\Header.jsx":"4","F:\\smart-house\\src\\components\\Navbar\\Navbar.jsx":"5","F:\\smart-house\\src\\components\\Content\\Dashboard.jsx":"6","F:\\smart-house\\src\\DAL\\api.js":"7","F:\\smart-house\\src\\components\\utils\\SetErrorForm.js":"8","F:\\smart-house\\src\\components\\utils\\InputСontroller.jsx":"9","F:\\smart-house\\src\\components\\Login\\SignUp.jsx":"10","F:\\smart-house\\src\\components\\Login\\SignIn.jsx":"11","F:\\smart-house\\src\\redux\\selectors\\authSelector.js":"12","F:\\smart-house\\src\\redux\\reducers\\authReducer.js":"13","F:\\smart-house\\src\\redux\\reducers\\projectReducer.js":"14","F:\\smart-house\\src\\redux\\selectors\\projectSelector.js":"15","F:\\smart-house\\src\\components\\Content\\Project.jsx":"16","F:\\smart-house\\src\\components\\Content\\CreateProjectForm.jsx":"17","F:\\smart-house\\src\\components\\Content\\UpdateProjectForm.jsx":"18"},{"size":412,"mtime":1612461383508,"results":"19","hashOfConfig":"20"},{"size":1905,"mtime":1612685667174,"results":"21","hashOfConfig":"20"},{"size":618,"mtime":1612539801077,"results":"22","hashOfConfig":"20"},{"size":642,"mtime":1612536175201,"results":"23","hashOfConfig":"20"},{"size":1825,"mtime":1612681581498,"results":"24","hashOfConfig":"20"},{"size":2096,"mtime":1612710856054,"results":"25","hashOfConfig":"20"},{"size":1727,"mtime":1612706703015,"results":"26","hashOfConfig":"20"},{"size":206,"mtime":1612427857590,"results":"27","hashOfConfig":"20"},{"size":897,"mtime":1612262038531,"results":"28","hashOfConfig":"20"},{"size":2722,"mtime":1612687689650,"results":"29","hashOfConfig":"20"},{"size":2426,"mtime":1612709586254,"results":"30","hashOfConfig":"20"},{"size":496,"mtime":1612453508794,"results":"31","hashOfConfig":"20"},{"size":2686,"mtime":1612710701463,"results":"32","hashOfConfig":"20"},{"size":2275,"mtime":1612709050884,"results":"33","hashOfConfig":"20"},{"size":355,"mtime":1612679880498,"results":"34","hashOfConfig":"20"},{"size":1210,"mtime":1612707360437,"results":"35","hashOfConfig":"20"},{"size":1442,"mtime":1612708174914,"results":"36","hashOfConfig":"20"},{"size":1371,"mtime":1612707328614,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wu141m",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"F:\\smart-house\\src\\index.js",[],["83","84"],"F:\\smart-house\\src\\App.js",[],"F:\\smart-house\\src\\redux\\store.js",[],"F:\\smart-house\\src\\components\\Header\\Header.jsx",["85"],"import React from \"react\";\r\nimport styles from \"../../styles/Header.module.css\";\r\nimport { Layout } from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n} from '@ant-design/icons';\r\nimport '../../index.css';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderComponent = (props) => {\r\n    return (\r\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            {React.createElement(props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                className: 'trigger',\r\n                onClick: () => props.toggle(prev => !prev),\r\n            })}\r\n\r\n        </Header>\r\n    );\r\n};\r\n\r\n\r\n","F:\\smart-house\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\smart-house\\src\\components\\Content\\Dashboard.jsx",["86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../styles/Content.module.css\";\r\nimport { createProjectThunkCreator, getProjectPageThunkCreator, deleteProjectThunkCreator, updateProjectThunkCreator } from \"../../redux/reducers/projectReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserName, getUserToken } from \"../../redux/selectors/authSelector\";\r\nimport { getCountPage, getProjects } from \"../../redux/selectors/projectSelector\";\r\nimport { CreateProjectForm } from \"./CreateProjectForm\";\r\nimport { Project } from \"./Project\";\r\n\r\nexport const Dashboard = ({ username, token, page, projects, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        props.getProjectPageThunkCreator(username, token, page)\r\n    }, []);\r\n\r\n    const [isCreateForm, setCreateForm] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => setCreateForm(true)}>+</button>\r\n\r\n            {isCreateForm && <CreateProjectForm\r\n                token={token}\r\n                createProjectThunkCreator={props.createProjectThunkCreator}\r\n                page={page}\r\n                username={username}\r\n                setCreateForm={setCreateForm}\r\n                projectLength={projects.length}\r\n            />}\r\n\r\n            {projects.map((project, key) => <Project\r\n                project={project}\r\n                key={key}\r\n                token={token}\r\n                page={page}\r\n                username={username}\r\n                deleteProjectThunkCreator={props.deleteProjectThunkCreator}\r\n                updateProjectThunkCreator={props.updateProjectThunkCreator}\r\n            />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: getUserName(state),\r\n        token: getUserToken(state),\r\n        page: getCountPage(state),\r\n        projects: getProjects(state)\r\n    }\r\n};\r\nexport const DashboardContainer = connect(mapStateToProps, {\r\n    getProjectPageThunkCreator,\r\n    createProjectThunkCreator,\r\n    deleteProjectThunkCreator,\r\n    updateProjectThunkCreator\r\n})(Dashboard);\r\n\r\n\r\n","F:\\smart-house\\src\\DAL\\api.js",[],"F:\\smart-house\\src\\components\\utils\\SetErrorForm.js",[],"F:\\smart-house\\src\\components\\utils\\InputСontroller.jsx",["88"],"import React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { Alert } from '@material-ui/lab';\r\nimport styles from \"../../styles/Login.module.css\";\r\nimport { Input } from 'antd';\r\n\r\nexport const InputController = ({ control, name, type, inputError = null }) => {\r\n    return (\r\n        <div>\r\n            <Controller\r\n                control={control}\r\n                name={name}\r\n                render={({ onChange, onBlur, value }) => (\r\n                    <Input\r\n                        type={type}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        selected={value}\r\n                    />\r\n                )}\r\n            />\r\n            {inputError &&\r\n                <Alert severity=\"error\">\r\n                    {inputError.message}\r\n                </Alert>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n","F:\\smart-house\\src\\components\\Login\\SignUp.jsx",[],"F:\\smart-house\\src\\components\\Login\\SignIn.jsx",[],"F:\\smart-house\\src\\redux\\selectors\\authSelector.js",[],"F:\\smart-house\\src\\redux\\reducers\\authReducer.js",["89"],"import { authAPI } from \"../../DAL/api\";\r\nimport Cookies from 'js-cookie'\r\n\r\nconst initialState = {\r\n    username: null,\r\n    token: null,\r\n    tokenValidity: null,\r\n    isAuth: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET-AUTH-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (authData) => {\r\n    return {\r\n        type: \"SET-AUTH-USER-DATA\",\r\n        data: authData,\r\n    };\r\n};\r\n\r\nexport const setCookie = (authData) => {\r\n    return (dispatch) => {\r\n        dispatch(setAuthUserData(authData))\r\n    }\r\n}\r\n\r\nexport const deleteCookie = (names) => {\r\n    return (dispatch) => {\r\n        names.map(\r\n            (name) => {\r\n                Cookies.remove(name);\r\n            }\r\n        );\r\n        //dispatch(setAuthUserData({ \"username\": null, \"token\": null, \"isAuth\": false }));\r\n        // нужно сделать обнуление\r\n    }\r\n}\r\n\r\n// Redux-Thunk\r\n\r\nexport const signInThunkCreator = (authData, setError) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await authAPI.signIn(authData);\r\n            dispatch(setAuthUserData({ ...response, isAuth: true }));\r\n        } catch (error) {\r\n            // Check http server response error\r\n            if (error.response.data) {\r\n                setError(error.response.data.field, {\r\n                    type: error.response.status,\r\n                    message: error.response.data.message\r\n                });\r\n            } else {\r\n                // Set stack error\r\n                setError(\"error\", {\r\n                    type: error.toJSON().name,\r\n                    message: error.toJSON().message\r\n                });\r\n            }\r\n\r\n        }\r\n    };\r\n};\r\n\r\nexport const signUpThunkCreator = (authData, setError) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await authAPI.signUp(authData);\r\n            dispatch(setAuthUserData(response));\r\n        } catch (error) {\r\n            // Check http server response error\r\n            if (error.response.data) {\r\n                setError(error.response.data.field, {\r\n                    type: error.response.status,\r\n                    message: error.response.data.message\r\n                });\r\n            } else {\r\n                // Set stack error\r\n                setError(\"error\", {\r\n                    type: error.toJSON().name,\r\n                    message: error.toJSON().message\r\n                });\r\n            }\r\n        }\r\n\r\n    };\r\n};\r\n\r\n","F:\\smart-house\\src\\redux\\reducers\\projectReducer.js",["90","91","92"],"import { projectAPI } from \"../../DAL/api\";\r\n\r\n\r\nconst initialState = {\r\n    page: 1,\r\n    projects: [],\r\n};\r\n\r\nexport const projectReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET-PROJECTS\":\r\n            return {\r\n                ...state,\r\n                projects: action.data,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setProjects = (projects) => {\r\n    return {\r\n        type: \"SET-PROJECTS\",\r\n        data: projects,\r\n    };\r\n};\r\n\r\n// Redux-Thunk\r\n\r\nexport const getProjectPageThunkCreator = (username, token, page) => {\r\n    return async (dispatch) => {\r\n        const response = await projectAPI.getProjectPage(username, token, page);\r\n        dispatch(setProjects(response));\r\n    };\r\n};\r\n\r\nexport const createProjectThunkCreator = (projectData, token, username, page, projectLength, setError) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await projectAPI.createProject(projectData, token);\r\n            if (projectLength < 3) {\r\n                //3 - максимальное количество проектов на странице\r\n                dispatch(getProjectPageThunkCreator(username, token, page))\r\n            }\r\n        } catch (error) {\r\n            setError(error.response.data.field, {\r\n                type: error.response.status,\r\n                message: error.response.data.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteProjectThunkCreator = (id, token, username, page) => {\r\n    return async (dispatch) => {\r\n        const response = await projectAPI.deleteProject(id, token);\r\n        dispatch(getProjectPageThunkCreator(username, token, page))\r\n    };\r\n};\r\n\r\nexport const updateProjectThunkCreator = (projectData, token, id, username, page, setError) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await projectAPI.updateProject(projectData, token, id);\r\n            dispatch(getProjectPageThunkCreator(username, token, page))\r\n        } catch (error) {\r\n            setError(error.response.data.field, {\r\n                type: error.response.status,\r\n                message: error.response.data.message\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n","F:\\smart-house\\src\\redux\\selectors\\projectSelector.js",[],"F:\\smart-house\\src\\components\\Content\\Project.jsx",["93"],"import React, { useState } from \"react\";\r\nimport styles from \"../../styles/Content.module.css\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { UpdateProjectForm } from \"./UpdateProjectForm\";\r\n\r\nexport const Project = ({ project, key, token, page, username, deleteProjectThunkCreator, updateProjectThunkCreator }) => {\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    return (\r\n        <div>\r\n\r\n            <Box key={key} component=\"span\" display=\"block\" p={2} m={1} bgcolor=\"background.paper\">\r\n                <div>{project.name}</div>\r\n                <div>{project.title}</div>\r\n            </Box>\r\n\r\n            <button onClick={() => deleteProjectThunkCreator(project.id, token, username, page)}>delete</button>\r\n\r\n            {isUpdate ?\r\n                <UpdateProjectForm\r\n                    token={token}\r\n                    page={page}\r\n                    username={username}\r\n                    setIsUpdate={setIsUpdate}\r\n                    updateProjectThunkCreator={updateProjectThunkCreator}\r\n                    id={project.id}\r\n                />\r\n                : <button onClick={() => setIsUpdate(true)}>update</button>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","F:\\smart-house\\src\\components\\Content\\CreateProjectForm.jsx",["94","95"],"import React from \"react\";\r\nimport styles from \"../../styles/Content.module.css\";\r\nimport { InputController } from \"../utils/InputСontroller\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from 'antd';\r\nimport { setErrorForm } from \"../utils/SetErrorForm\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\n\r\nexport const CreateProjectForm = ({ token, username, page, projectLength, createProjectThunkCreator, setCreateForm }) => {\r\n\r\n    const { handleSubmit, control, setError, errors } = useForm({\r\n        defaultValues: {\r\n            \"name\": \"\",\r\n            \"title\": \"\",\r\n        },\r\n    })\r\n\r\n    const onSubmit = (projectData) => {\r\n        createProjectThunkCreator(projectData, token, username, page, projectLength, setError);\r\n    };\r\n\r\n    const onError = (e) => {\r\n        setErrorForm(e, setError);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit((projectData) => onSubmit(projectData), onError)}>\r\n            <b>Create Project</b><br />\r\n\r\n            <b>Name: </b><br />\r\n            <InputController control={control} type=\"text\" name=\"name\" inputError={errors.name} />\r\n\r\n            <b>Title: </b><br />\r\n            <InputController control={control} type=\"text\" name=\"title\" inputError={errors.title} />\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\">Create</Button>\r\n            <Button type=\"primary\" onClick={() => setCreateForm(false)}>Close</Button>\r\n        </form >\r\n    )\r\n}","F:\\smart-house\\src\\components\\Content\\UpdateProjectForm.jsx",["96"],"import React from \"react\";\r\nimport styles from \"../../styles/Content.module.css\";\r\nimport { InputController } from \"../utils/InputСontroller\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from 'antd';\r\nimport { setErrorForm } from \"../utils/SetErrorForm\";\r\n\r\nexport const UpdateProjectForm = ({ token, username, id, page, updateProjectThunkCreator, setIsUpdate }) => {\r\n\r\n    const { handleSubmit, control, setError, errors } = useForm({\r\n        defaultValues: {\r\n            \"name\": \"\",\r\n            \"title\": \"\",\r\n        },\r\n    })\r\n\r\n    const onSubmit = (projectData) => {\r\n        updateProjectThunkCreator(projectData, token, id, username, page, setError);\r\n    };\r\n\r\n    const onError = (e) => {\r\n        setErrorForm(e, setError);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit((projectData) => onSubmit(projectData), onError)}>\r\n            <b>Update Project</b><br />\r\n\r\n            <b>Name: </b><br />\r\n            <InputController control={control} type=\"text\" name=\"name\" inputError={errors.name} />\r\n\r\n            <b>Title: </b><br />\r\n            <InputController control={control} type=\"text\" name=\"title\" inputError={errors.title} />\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\">Update</Button>\r\n            <Button type=\"primary\" onClick={() => setIsUpdate(false)}>Close</Button>\r\n        </form >\r\n    )\r\n}",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":14,"column":8,"nodeType":"107","endLine":14,"endColumn":10,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":40,"column":20,"nodeType":"111","messageId":"112","endLine":40,"endColumn":22},{"ruleId":"101","severity":1,"message":"113","line":40,"column":19,"nodeType":"103","messageId":"104","endLine":40,"endColumn":27},{"ruleId":"101","severity":1,"message":"113","line":56,"column":15,"nodeType":"103","messageId":"104","endLine":56,"endColumn":23},{"ruleId":"101","severity":1,"message":"113","line":64,"column":19,"nodeType":"103","messageId":"104","endLine":64,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"114","line":7,"column":10,"nodeType":"103","messageId":"104","endLine":7,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page', 'props', 'token', and 'username'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["117"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'response' is assigned a value but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [page, props, token, username]",{"range":"120","text":"121"},[751,753],"[page, props, token, username]"]